{"version":3,"file":"static/js/601.1398e8df.chunk.js","mappings":"oLACA,EAA+B,mCAA/B,EAA0F,4C,SCyD1F,EApDoB,SAAHA,GAOV,IAADC,EAAAD,EANJE,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EACZE,EAAMH,EAANG,OACAC,EAAYJ,EAAZI,aACAC,EAAYL,EAAZK,aACAC,EAAMN,EAANM,OACAC,EAAKP,EAALO,MAEMC,GAAsBC,EAAAA,EAAAA,cAC1B,SAACC,EAAIC,GACHN,EAAaK,EAAIC,EACnB,GACA,CAACN,IAGGO,EAAYV,EAAQW,KAAI,SAACC,EAAQH,GAAW,OAChDI,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAuBC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAAD,SAAQJ,EAAOM,QACfD,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgCC,SAC7CJ,EAAOO,MAAMR,KAAI,SAACS,GAAI,OACrBH,EAAAA,EAAAA,KAACI,EAAAA,EAAc,CACbb,GAAIY,EAAKZ,GACTc,gBAAiBF,EAAKG,SAEtBC,SAAU,SAAChB,GAAE,OAAKF,EAAoBE,EAAIC,EAAY,EAACO,SAEtDI,EAAKF,MAAI,GAAAO,OAHFL,EAAKZ,IAAEiB,OAAGL,EAAKG,UAIR,QAX0Bd,EAcvC,IAGNiB,GACJb,EAAAA,EAAAA,MAAAc,EAAAA,SAAA,CAAAX,SAAA,EACEC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACC,SAAO,EAACC,QAASzB,EAAMW,SAAC,sDAGhCC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACE,QAAS1B,EAAOY,SAAC,8DAG7B,OACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACJC,MAAM,6CACNC,KAAMvB,EACNwB,OAAQR,EACRzB,OAAQA,EACRC,aAAcA,GAGpB,C","sources":["webpack://cafe/./src/_components/Panels/FilterPanel/filter-panel.module.scss?b6b5","_components/Panels/FilterPanel/FilterPanel.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filter-panel\":\"filter-panel_filter-panel__oqGai\",\"filter-panel__section\":\"filter-panel_filter-panel__section__aQtuT\"};","import React, { useCallback } from 'react';\nimport Button from '@/_components/Buttons/Button';\nimport CheckboxButton from '@/_components/Buttons/CheckboxButton';\nimport Panel from '../Panel';\nimport styles from './filter-panel.module.scss';\n\nconst FilterPanel = ({\n  filters = [],\n  isOpen,\n  toggleIsOpen,\n  onToggleItem,\n  accept,\n  reset,\n}) => {\n  const onToggleItemHandler = useCallback(\n    (id, filterIndex) => {\n      onToggleItem(id, filterIndex);\n    },\n    [onToggleItem],\n  );\n\n  const PanelBody = filters.map((filter, filterIndex) => (\n    <section className={styles['filter-panel']} key={filterIndex}>\n      <label>{filter.name}</label>\n      <div className={styles['filter-panel__section']}>\n        {filter.items.map((item) => (\n          <CheckboxButton\n            id={item.id}\n            initialChecked={!item.selected}\n            key={`${item.id}${item.selected}`}\n            onChange={(id) => onToggleItemHandler(id, filterIndex)}\n          >\n            {item.name}\n          </CheckboxButton>\n        ))}\n      </div>\n    </section>\n  ));\n\n  const PanelFooter = (\n    <>\n      <Button outline onClick={reset}>\n        Сбросить\n      </Button>\n      <Button onClick={accept}>Применить</Button>\n    </>\n  );\n  return (\n    <Panel\n      label=\"Фильтры\"\n      body={PanelBody}\n      footer={PanelFooter}\n      isOpen={isOpen}\n      toggleIsOpen={toggleIsOpen}\n    />\n  );\n};\n\nexport default FilterPanel;\n"],"names":["_ref","_ref$filters","filters","isOpen","toggleIsOpen","onToggleItem","accept","reset","onToggleItemHandler","useCallback","id","filterIndex","PanelBody","map","filter","_jsxs","className","styles","children","_jsx","name","items","item","CheckboxButton","initialChecked","selected","onChange","concat","PanelFooter","_Fragment","Button","outline","onClick","Panel","label","body","footer"],"sourceRoot":""}